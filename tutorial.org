#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:nil p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+title: Pure Emacs Tutorial
#+date: <2022-06-15 Wed>
#+author: Dr YF Lin
#+email: drlinyf@outlook.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 28.1 (Org mode 9.5.2)
#+cite_export:

#+begin_quote
"Something good, from sand to a tower with spiral evolution and from the tower to dust in your universe as You wish to be" – Dr YF Lin
#+end_quote

* Summary
The tutorial is to demonstrate how this Emacs editor is developed. We pursume a
simple, integrated and efficient platform with limited packages, no more than
100 as a pure Emacs to be using for learning, teaching, research and project
management.

Copyleft Declaration:
#+begin_src emacs-lisp
;; Copyleft (CL) 2018-2028 YF Lin
;;
;; Something good as indicated, by Dr YF Lin <e.yflin@gmail.com>
;; URL: https://github.com/Ethanlinyf/PureEmacs
;; Under ThingsEngine Project: https://www.thethingsengine.org
#+end_src

* Introduction
- Pure Emacs \\
  EMACS, Editing Macros, is an extensible and real-time display editor written
  in a programming language called Elisp. With (< 100) packages for Emacs, we
  are developing *Pure Emacs* as an simple and integrated platform to facilitate
  learning, teachng, research and project management. This development as a
  repository is shared through GitHub, as well as with a tutorial also published through
  the ThingsEngine websit: Https://www.thethingsengine.org. 
- Elisp \\
- Order \\
* Key Remapping
1. M(eta): option (Mac)，left windows (Windows)
2. s(uper): command (Mac)，left Alt (Windows)
3. S(Shift): no need to change 
4. C(left-Ctrl): Caps Lock 
** Windows: SharpKeys
- How to open with Emacs in Windows\\
  Windows Registry Editor Version 5.00
  #+begin_quote
  [HKEY_CLASSES_ROOT\*\shell]
  [HKEY_CLASSES_ROOT\*\shell\openwemacs]
  @="&Edit with Emacs"
  [HKEY_CLASSES_ROOT\*\shell\openwemacs\command]
  @="C:\\emax64\\bin\\emacsclientw.exe -n \"%1\""
  [HKEY_CLASSES_ROOT\Directory\shell\openwemacs]
  @="Edit &with Emacs"
  [HKEY_CLASSES_ROOT\Directory\shell\openwemacs\command]
  @="C:\\emax64\\bin\\emacsclientw.exe -n \"%1\""
  #+end_quote

  And Emacs should be available on server-mode
  #+begin_src emacs-lisp
    (server-mode 1)
  #+end_src
** Mac:
  #+begin_src emacs-lisp
    (setq mac-option-modifier 'meta
      mac-command-modifier 'super)
  #+end_src

  #+begin_src emacs-lisp
    (global-set-key (kbd "s-a") 'mark-whole-buffer) 
    (global-set-key (kbd "s-c") 'kill-ring-save) 
    (global-set-key (kbd "s-s") 'save-buffer) 
    (global-set-key (kbd "s-v") 'yank) 
    (global-set-key (kbd "s-z") 'undo) 
    (global-set-key (kbd "s-x") 'kill-region) 
  #+end_src
* Loading Sequence
** early-init.el
- Development with debugging \\
  In this development, the configurations will continuously be optimized. When a
  lisp error happens during Emacs running, the debuger can be called to
  investigate immediate causes of this error.

  Set the variable debug-on-error to non-nil make errors to enter the debugger.

  #+begin_src emacs-lisp
    (setq debug-on-error t)
  #+end_src

  If Emacs is not able to open, you can run Emacs in a terminal with an option ‘--debug-init’ to catch the
  errors that may happens when loading of the init settings.

  To make the configuration effective without rebooting Emacs:
  + M-x load-file
  + M-x eval-buffer
  + C-x C-e
- The minimum required version of Emacs \\
  + how to check the version of Emacs?
     #+begin_src emacs-lisp
       (emacs-version)
     #+end_src

    This command returns the version description of Emacs that is running. It is
    useful in bug reports. For example, "GNU Emacs 28.1 (build 1,
    aarch64-apple-darwin21.4.0, NS appkit-2113.40 Version 12.3.1 (Build 21E258))
    of 2022-06-06"

    You could use "emacs-major-version" and "emacs-minor-version" to indicate
    the major and minor version of Emacs.

  + Specify the minimum required version of Emacs for this configuration
    #+begin_src emacs-lisp
      (let ((minver "27.1"))
      (when (version< emacs-version minver)
        (error "Puremacs requires V%s or higher versions." minver)))
    #+end_src

    Puremacs is compatible from the emacs version 27.1. However, the development
    is based on 28.1.
- Optimizing Emacs Startup
  + "benchmark-init"
    The [[https://www.emacswiki.org/emacs/BenchmarkInit][benchmark-init]] can be use to indicate where Emacs will spend time during
    startup. 

    benchmark-init can help to record the duration spent in ‘require’ and ‘load’
    when emacs is runnning to laod modulesearly on in the init file. And each
    Emacs module will be essentially benchmarked as a tabular format or as a
    tree based on the origin of the recorded operations.

    See the repository in the GitHub: https://github.com/dholm/benchmark-init-el
    And an example below: 
    | Module                       | Type    | ms [^] | total ms |
    |------------------------------+---------+--------+----------|
    | eldoc-eval                   | require |    200 |      200 |
    | eldoc                        | require |    188 |      188 |
    | ispell                       | require |     20 |       20 |
    | grep                         | require |      9 |        9 |
    | ~/.emacs.d/benchmark-init.el | load    |      1 |        1 |
  + Speed up Emacs at the startup
    * Set the parameters for the gabbage collections 
      #+begin_src emacs-lisp
      (setq gc-cons-threshold most-positive-fixnum) ;; AT startup
      (add-hook 'after-init-hook #'(lambda () (setq gc-cons-threshold 800000))) ;; after startup
      #+end_src

    * enable heavy modes after init
      For example
      #+begin_src emacs-lisp
        (add-hook 'after-init-hook 'gloable-company-mode)
      #+end_src

    * disable case-insensitive search
      #+begin_src emacs-lisp
        (setq package-enable-at-startup nil)
      #+end_src

    * Save time by skipping the mtime checks on *.els files
      #+begin_src emacs-lisp
        (setq load-prefer-newer noninteractive)
      #+end_src

    * Prevent premature redisplays
      #+begin_src emacs-lisp
        (setq-default inhibit-redisplay t
                      inhibit-message t)
        (add-hook 'window-setup-hook
                  (lambda ()
                    (setq-default inhibit-redisplay nil
                                  inhibit-message nil)
                    (redisplay)))
      #+end_src

    * Suppress a second case-insensitive search
      #+begin_src emacs-lisp
        (setq auto-mode-case-fold nil)
      #+end_src

    * Disable package at startup
      #+begin_src emacs-lisp
        (setq package-enable-at-startup nil)
      #+end_src

    * Prevent resising the fram at early stage
      #+begin_src emacs-lisp
        (setq frame-inhibit-implied-resize t)
      #+end_src

- Specify the system default coding as "UTF-8"
   #+begin_src emacs-lisp
     (set-language-environment "UTF-8")
   #+end_src
    
** custom.el
** macro.el
** init.el
** lisp
*** init-a-abbr.el
*** init-b-basic.el
**** init-const.el
**** init-custom.el
*** init-c-package.el
*** init-d-enhance.el
*** init-e-dired.el
*** init-e-tracemacs.el
*** init-e-ui.el
*** init-f-dashboard.el
*** init-g-yasnippet.el
*** init-h-lsp.el
*** init-i-org.el
*** init-i-python.el
*** init-i-roam.el
*** init-i-tex.el
*** init-s-special.el
*** init-x-extra.el
*** init-z-test.el
** site-lisp
*** aweshell 
*** awesome-tab
*** lsp-bridge
*** word-completion
*** Own development
- init-j-purefunction.el
* Planning
** Org
- org-super-agenda
  https://github.com/alphapapa/org-super-agenda
- org-noter
- 

* Referenc
1. [[zotero://select/items/1_Y6L4QMKZ][“Gnu.Org.” Accessed June 16, 2022. https://www.gnu.org/software/emacs/manual/html_node/elisp/Error-Debugging.html.]]
2. [[zotero://select/items/1_MAW49NXR][“EmacsWiki: Optimizing Emacs Startup.” Accessed June 17, 2022. https://www.emacswiki.org/emacs/OptimizingEmacsStartup.]]
3. [[zotero://select/items/1_XC55BTU4][Doom Emacs. Emacs Lisp. 2014. Reprint, Doom Emacs, 2022. https://github.com/doomemacs/doomemacs.]]
