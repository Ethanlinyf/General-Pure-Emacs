#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:nil p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+title: GPE is a Platform of Emacs
#+date: <2022-08-15 Mon>
#+author: Ethan YF Lin
#+email: e.yflin@gmail.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 29.0.50 (Org mode 9.5.4)
#+cite_export:
#+startup: overview 

#+begin_quote
The GPE is not GPE, but named GPE. 
#+end_quote

* Introduction
GPE is an integrated and flexible platform based on Gnu Emacs with
around 100 packages to facilitate learning/teaching, research and
project management.

What is "G.P.E": 
- General :: The operation with all the integrated facilities is generalised.
- Pure :: The entire platform is driven by the pure Turing programming
  language, elisp.
- Extensible :: This interactive platform is extensible for whatever you want
  to, even *brew coffee* with it. 

[[./site-lisp/figure/GPE-Framework_4.png]]

* A basic structure of configuration
Emacs:~$ (init 0 1) --> G.P.E
#+BEGIN_EXAMPLE
  .emacs.d/
     |
     |-- early-init
     |-- init.el
     |
     |-- lisp/
     |   |-- init-bridge.el
     |   |-- init-system
     |   |-- init-authentication
     |   |-- init-basic
     |   |-- init-minibuffer
     |   |-- init-dired
     |   |-- init-enhance
     |   |-- init-platform
     |   |-- init-interface
     |   |-- init-dashboard
     |   |-- init-i18n
     |   |-- init-org
     |   |-- init-roam
     |   |-- init-research
     |   |-- init-tex
     |   |-- init-python
     |   |-- init-java
     |   |-- init-c/c++
     |   |-- init-lua
     |   |-- init-julia
     |   |-- init-update
     |
     |-- site-lisp/
     |   |-- lsp-bridge
     |   |-- aweshell
     |   |-- awesome-tab
     |   |-- blink-search
     |   |-- popweb
     |   |-- pure-const
     |   |-- pure-custom
     |   |-- pure-function
     |   |-- pure-macros
     |   |-- tutorial
     |
     |-- custom.el
     |
     |-- ...
#+END_EXAMPLE
** Configuration Methodology
To follow the principles of this platform, general, pure and
extensible, the configuration will be generated with the following
considerations:
- Easy to integrate and debug
- Lower coupling and higer cohersion
- More aggegation and less inheritance

[[./site-lisp/figure/Configuration_Metodology_5.png]]
* Feature
- Entrance: a fancy dashboard
  [[./site-lisp/figure/GPE-dashboard.jpeg]]
- Integrated
  + Note-taken \\
    Org-mode has useful functionalities to take notes. Quick to open an
    file for note-taking, an Org file can be bounded to the key "F1":
    #+begin_src emacs-lisp
      (defun open-note-file ()
        "Quickly open an org file for note taking."
        (interactive)
        (find-file "~/Documents/Org/note.org"))
      (global-set-key (kbd "<f1>") 'open-note-file)
    #+end_src

    Further extended with the Org-Roam (V2) package by saving all the links between
    files and headings in a database[fn:1].
    [[./site-lisp/figure/org-roam-network.png]]

  + Programming as an IDE:

    [[./site-lisp/figure/Emacs_elisp_programming.png]]

  + Plan and schedule

    [[./site-lisp/figure/TaskManagement.png]]

  + Management for research purposes as an example below:

    [[./site-lisp/figure/Git-for-research-project.png]]

- Custmisable \\
  Nothing cannot be custmised in this General Pure Emacs. For example,
  mode-line customised by doom-modeline:

  [[./site-lisp/figure/mode-line.png]]

- Extensible
  + Multiple threading and asynchronous processing
    - Scheduler for requests
    - Flexible capacity tray
    - Focus-oriented

  + literate programming[fn:2] \\

    [[./site-lisp/figure/literate-programming.png]]

    The literate programming mode, Org-Babel, is able to embed multiple
    programming languages in a org file to make it as an active document.
  + roam-network

    * How to import and visualize your roam research, obsidian and
      zettelkasten markdown format notes, a graphical frontend for
      your org-roam Zettelkasten, org-roam-ui[fn:3]:

      [[./site-lisp/figure/roam-research-ui.png]]

- Creative and Inovative \\
  + A creative workshop in this platform is established to publish org
    files to XHTML files with customised theme file (css and js) to be
    hosted as a website ([[https://www.thethingsengine.org/index.html][Something-Good]]) in Github:
    [[./site-lisp/figure/org2xhtml.png]]
  Push at the boundary of knowledge with GPE [fn:4]:

  [[./site-lisp/figure/creative_emacs.jpg]]

- Instructive \\
  The tutorial how to build this platform will be illustrated at the website [[https://thethingsengine.org][Something-Good]] under the ThingsEngine Project.
* Installation
To enhance the default Emacs experience, the latest stable release (28.2) is
recommended.

1. Backup your existing configuration
   #+begin_src shell
     mv ~/.emacs.d ~/.emacs.d.bak
   #+end_src
2. Clone this repository
   You should install Git in your system first, as well as set your
   usename and email, the same for GitHub. See the [[https://github.com/Ethanlinyf/Git-GitHub-Tutorial][tutorial]] of
   Git/Github. 
   #+begin_src shell
     git clone --depth 1 git@github.com:Ethanlinyf/General-Pure-Emacs.git ~/.emacs.d
   #+end_src
3. Install the dependencies
   For MacOS: 
   #+begin_src shell
     brew install autoconf automake texinfo gnutls pkg-config libxml2 --debug --verbose
   #+end_src
4. GUI with icons \\
   Run: M-x all-the-icons-install-fonts to install the needed fonts.
5. To fetch the submodules in General Pure Emacs
   #+begin_src shell
     cd .emacs.d
   #+end_src
   Then, run the following to in a terminal:
   #+begin_src elisp
     git submodule update --init --recursive

     git submodule foreach git reset --hard
   #+end_src
   
   Maybe you need to run "git submodule foreach git checkout
   master/main". And to update the submodules, you could use:

   #+begin_src shell
     git submodule foreach git pull --rebase
   #+end_src
6. Then, open Emacs(>= 28.2) to install the needed package.
   - Yes for "Need to (re)build the epdfinfo program, do it now ?":
   - Your root password is required to install a pdf-tool server.
   - You may need to wait for a while to complete downloading the needed packages.
7. Enjoy General Pure Emacs ~ 
* Support/Feedback
Bug reports are highly welcome and appreciated!

Please feedback any issues about configuration at this repository and
welcome any suggestions.
* License
This program is free software. You can redistribute and/or modify it
under [[https://github.com/redguardtoo/emacs.d/blob/master/LICENSE][GNU General Public License]] published by the Free Software
Foundation, as well as Copyleft under [[https://thethingsengine.org][ThingsEngine]] project. The
constributions are shared with the hope that this program will be
useful, helpful and inspiring, but without any warranty; without even
the implied warranty of merchantability or fitness for a particular
purpose.

* Footnote
[fn:1] [[https://lucidmanager.org/data-science/visualise-org-roam/][Visualise Org-Roam Networks With igraph and R]]

[fn:2] [[http://www.jstatsoft.org/v46/i03/][A Multi-Language Computing Environment for Literate
Programming and Reproducible Research]]

[fn:3] [[org-roam-ui]]

[fn:4] [[http://academiclifehistories.weebly.com/blog/phd-pitfalls-part-i-the-reality-of-your-contribution][PhD pitfalls: The reality of your contribution]]
